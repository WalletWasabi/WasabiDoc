import{_ as s}from"./WalletSynchronizing-Bg2Cuco7.js";import{_ as d,c as r,a as e,d as l,w as a,b as t,e as c,r as i,o as h}from"./app-CQD1G_B-.js";const p="/WalletOpen.png",u={},f=e("h1",{id:"wallet-load",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#wallet-load"},[e("span",null,"Wallet Load")])],-1),w={class:"table-of-contents"},b=e("h2",{id:"loading-wallet-step-by-step",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#loading-wallet-step-by-step"},[e("span",null,"Loading wallet step-by-step")])],-1),y=e("p",null,"To load a wallet and start the synchonization process, you need to open your wallet by typing in the passphrase. The first time synchronization of your wallet might take some time depending on the size of its history.",-1),g=e("h3",{id:"wallet-list",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#wallet-list"},[e("span",null,"Wallet list")])],-1),_=e("code",null,"Wallet list",-1),k=c('<p>Click the wallet you want to view, type in the passphrase and press <code>Open</code>.</p><p><img src="'+p+'" alt="Type your passphrase to open the wallet" title="Type your passphrase to open the wallet"></p><h2 id="synchronization" tabindex="-1"><a class="header-anchor" href="#synchronization"><span>Synchronization</span></a></h2><h3 id="filter-download" tabindex="-1"><a class="header-anchor" href="#filter-download"><span>Filter download</span></a></h3><p>As soon as you start Wasabi, it connects to the indexer (backend) server with a new Tor identity and requests the (custom) Wasabi block filters. At the first start, this can take a while because all filters need to be downloaded, but for the subsequent starts, this is faster as only the most recent filters are requested.</p><p><img src="'+s+'" alt="Wallet is synchronizing itself with the Bitcoin network" title="Wallet is synchronizing itself with the Bitcoin network"></p><p>If a Bitcoin full node is connected and has the BIP 158 block filters, Wasabi will use these to synchronize.</p><h3 id="filter-scanning" tabindex="-1"><a class="header-anchor" href="#filter-scanning"><span>Filter scanning</span></a></h3><p>When you load a wallet, it checks if the generated addresses within the gap limit hit against a block filter. Most filters do not hit, and then the wallet is certain that this block does not contain a transaction of yours so it will not download it. If a transaction of yours is in a block, then the corresponding filter will always be hit, and the wallet will know this is a relevant block for you. There can be a small chance for a false positive where the filter matches, but the block actually does not contain a transaction.</p><h3 id="block-download" tabindex="-1"><a class="header-anchor" href="#block-download"><span>Block download</span></a></h3>',10);function m(W,v){const n=i("router-link"),o=i("RouteLink");return h(),r("div",null,[f,e("nav",w,[e("ul",null,[e("li",null,[l(n,{to:"#loading-wallet-step-by-step"},{default:a(()=>[t("Loading wallet step-by-step")]),_:1}),e("ul",null,[e("li",null,[l(n,{to:"#wallet-list"},{default:a(()=>[t("Wallet list")]),_:1})])])]),e("li",null,[l(n,{to:"#synchronization"},{default:a(()=>[t("Synchronization")]),_:1}),e("ul",null,[e("li",null,[l(n,{to:"#filter-download"},{default:a(()=>[t("Filter download")]),_:1})]),e("li",null,[l(n,{to:"#filter-scanning"},{default:a(()=>[t("Filter scanning")]),_:1})]),e("li",null,[l(n,{to:"#block-download"},{default:a(()=>[t("Block download")]),_:1})])])])])]),b,y,g,e("p",null,[t("On the left side of Wasabi Wallet is the "),_,t(", where you see an alphabetically sorted list of all the previously "),l(o,{to:"/using-wasabi/WalletGeneration.html"},{default:a(()=>[t("generated")]),_:1}),t(" wallets.")]),k,e("p",null,[t("When a block filter hits, either a true match or a false positive, then this block is important for you, so the wallet will download it. If you have "),l(o,{to:"/using-wasabi/BitcoinFullNode.html"},{default:a(()=>[t("a Bitcoin full node connected")]),_:1}),t(", then it will fetch the verified block from the node. If not, Wasabi will download the block from the P2P network, and disconnect from the node after it served the block.")])])}const B=d(u,[["render",m],["__file","WalletLoad.html.vue"]]),L=JSON.parse('{"path":"/using-wasabi/WalletLoad.html","title":"Wallet Load","lang":"en-US","frontmatter":{"title":"Wallet Load","description":"A detailed guide about loading multiple wallets in Wasabi. This is the Wasabi documentation, an archive of knowledge about the open-source, non-custodial and privacy-focused Bitcoin wallet for desktop."},"headers":[{"level":2,"title":"Loading wallet step-by-step","slug":"loading-wallet-step-by-step","link":"#loading-wallet-step-by-step","children":[{"level":3,"title":"Wallet list","slug":"wallet-list","link":"#wallet-list","children":[]}]},{"level":2,"title":"Synchronization","slug":"synchronization","link":"#synchronization","children":[{"level":3,"title":"Filter download","slug":"filter-download","link":"#filter-download","children":[]},{"level":3,"title":"Filter scanning","slug":"filter-scanning","link":"#filter-scanning","children":[]},{"level":3,"title":"Block download","slug":"block-download","link":"#block-download","children":[]}]}],"git":{"updatedTime":1757009044000},"filePathRelative":"using-wasabi/WalletLoad.md"}');export{B as comp,L as data};
